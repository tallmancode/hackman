/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Hackman Api
 * Hackman Api
 * OpenAPI spec version: 1.0.0
 */
import type {
  ApiGamesGetCollection200One,
  ApiGamesGetCollectionParams,
  GameGameRead,
  GameGameWrite,
  GameGamesUserRead,
  GameJsonldGameRead,
  GameJsonldGameWrite,
  LoginCheckPost200,
  LoginCheckPostBody,
  RegisterUser200,
  RegisterUserBody,
  UserJsonldUserRead,
  UserUserRead
} from '../types/api';

import { customAxios } from '../utils/axios-instance';
export const getHackmanApi = () => {
/**
 * Retrieves a Game resource.
 * @summary Retrieves a Game resource.
 */
const userGames = (
    
 ) => {
      return customAxios<GameJsonldGameRead | GameGameRead>(
      {url: `/api/game`, method: 'GET'
    },
      );
    }
  
/**
 * Replaces the Game resource.
 * @summary Replaces the Game resource.
 */
const apiGamedieHashPut = (
    hash: string,
    apiGamedieHashPutBody: GameJsonldGameWrite | GameGameWrite,
 ) => {
      return customAxios<GameJsonldGameRead | GameGameRead>(
      {url: `/api/game/die/${hash}`, method: 'PUT',
      data: apiGamedieHashPutBody
    },
      );
    }
  
/**
 * Replaces the Game resource.
 * @summary Replaces the Game resource.
 */
const gameLevelup = (
    hash: string,
    gameLevelupBody: GameJsonldGameWrite | GameGameWrite,
 ) => {
      return customAxios<GameJsonldGameRead | GameGameRead>(
      {url: `/api/game/levelup/${hash}`, method: 'PUT',
      data: gameLevelupBody
    },
      );
    }
  
/**
 * Creates a Game resource.
 * @summary Creates a Game resource.
 */
const gameStart = (
    gameStartBody: GameJsonldGameWrite | GameGameWrite,
 ) => {
      return customAxios<GameJsonldGameRead | GameGameRead>(
      {url: `/api/game/start`, method: 'POST',
      data: gameStartBody
    },
      );
    }
  
/**
 * Retrieves the collection of Game resources.
 * @summary Retrieves the collection of Game resources.
 */
const apiGamesGetCollection = (
    params?: ApiGamesGetCollectionParams,
 ) => {
      return customAxios<ApiGamesGetCollection200One | GameGamesUserRead[]>(
      {url: `/api/games`, method: 'GET',
        params
    },
      );
    }
  
/**
 * Retrieves a Game resource.
 * @summary Retrieves a Game resource.
 */
const leaderboard = (
    
 ) => {
      return customAxios<GameJsonldGameRead | GameGameRead>(
      {url: `/api/leaderboard`, method: 'GET'
    },
      );
    }
  
/**
 * Creates a user token.
 * @summary Creates a user token.
 */
const loginCheckPost = (
    loginCheckPostBody: LoginCheckPostBody,
 ) => {
      return customAxios<LoginCheckPost200>(
      {url: `/api/login`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: loginCheckPostBody
    },
      );
    }
  
/**
 * @summary Register a new user.
 */
const registerUser = (
    registerUserBody?: RegisterUserBody,
 ) => {
      return customAxios<RegisterUser200>(
      {url: `/api/register`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: registerUserBody
    },
      );
    }
  
/**
 * Retrieves a User resource.
 * @summary Retrieves a User resource.
 */
const userDetails = (
    
 ) => {
      return customAxios<UserJsonldUserRead | UserUserRead>(
      {url: `/api/users/details`, method: 'GET'
    },
      );
    }
  
return {userGames,apiGamedieHashPut,gameLevelup,gameStart,apiGamesGetCollection,leaderboard,loginCheckPost,registerUser,userDetails}};

type AwaitedInput<T> = PromiseLike<T> | T;

    type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type UserGamesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['userGames']>>>
export type ApiGamedieHashPutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['apiGamedieHashPut']>>>
export type GameLevelupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['gameLevelup']>>>
export type GameStartResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['gameStart']>>>
export type ApiGamesGetCollectionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['apiGamesGetCollection']>>>
export type LeaderboardResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['leaderboard']>>>
export type LoginCheckPostResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['loginCheckPost']>>>
export type RegisterUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['registerUser']>>>
export type UserDetailsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHackmanApi>['userDetails']>>>
